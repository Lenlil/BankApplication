@model ShowAccountDetailsViewModel

<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.5.1/knockout-latest.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout.mapping/2.4.1/knockout.mapping.min.js"></script>

<section class="generic-banner relative">
    <div class="container">
        <div class="main-wrapper">
            <!-- Start service Area -->
            <section class="service-area pt-100" id="feature">
                <div class="container">
                    <h2 class="text-white">Account Details</h2>
                    <div class="row">
                        <div class="col">
                        </div>
                        <div class="col">
                            <div class="single-service">
                                <label class="text-white font-weight-bold">Account ID</label>
                                <p class="text-white">@Model.AccountId</p>
                            </div>
                        </div>
                        <div class="col">
                            <div class="single-service">
                                <label class="text-white font-weight-bold">Balance</label>
                                <p class="text-white">@Model.Balance.ToString("### ### ##0.00") BTC</p>
                            </div>
                        </div>
                        <div class="col">
                        </div>
                    </div>

                    <div class="row">
                        <div class="col">
                            <h6 class="text-white">Create a Transaction</h6>
                        </div>                        
                    </div>

                    <div class="row">
                        <div class="col"></div>
                        <div class="col">
                            <button class="genric-btn default circle text-uppercase mb-30"><a style="color:black;" asp-action="Withdrawal" asp-controller="Transaction" asp-route-id="@Model.AccountId">Withdrawal</a></button>
                        </div>
                        <div class="col">
                            <button class="genric-btn default circle text-uppercase mb-30"><a style="color:black;" asp-action="Deposit" asp-controller="Transaction" asp-route-id="@Model.AccountId">Deposit</a></button>
                        </div>
                        <div class="col"></div>
                    </div>
                    <div class="row">
                        <div class="col"></div>
                        <div class="col">
                            <button class="genric-btn default circle text-uppercase mb-30"><a style="color:black;" asp-action="TransferThisBank" asp-controller="Transaction" asp-route-id="@Model.AccountId">Transfer Within Bank</a></button>
                        </div>
                        <div class="col">
                            <button class="genric-btn default circle text-uppercase mb-30"><a style="color:black;" asp-action="TransferOtherBank" asp-controller="Transaction" asp-route-id="@Model.AccountId">Transfer To Other Bank</a></button>
                        </div>
                        <div class="col"></div>
                    </div>


                    </div>
            </section>
        </div>
    </div>
</section>

<!-- About Generic Start -->
<div class="main-wrapper">
    <!-- Start service Area -->
    <section class="service-area pt-100" id="feature">
        <div class="container">

            <h3>Transactions</h3>

            <div class="row">

                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Date</th>
                            <th scope="col">Type</th>
                            <th scope="col">Operation</th>
                            <th scope="col">Amount</th>
                            <th scope="col">Balance</th>
                            <th scope="col">Notes</th>
                            <th scope="col">Bank</th>
                            <th scope="col">Account</th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: transactions">
                        <tr>
                            <th scope="row" data-bind="text: transactionId"></th>
                            <td data-bind="text: date"></td>
                            <td data-bind="text: type"></td>
                            <td data-bind="text: operation"></td>
                            <td data-bind="text: amount"></td>
                            <td data-bind="text: balance"> SEK</td>
                            <td data-bind="text: symbol"></td>
                            <td data-bind="text: bank"></td>
                            <td data-bind="text: account"></td>                            
                        </tr>
                    </tbody>
                </table>
            </div>
            @*<label>Number of visible transactions: @Model.NumberVisibleTransactions / @Model.Transactions.Count()</label>
                <br/>*@
            <div class="row justify-content-center align-items-start">
                <button class="primary-btn text-uppercase mb-10" data-bind="click: load20More">Load more</button>
            </div>
        </div>
    </section>
</div>
<!-- End service Area -->
<!-- Load More Area -->


@section scripts{
    <script>

        var transactionViewModel = function (data) {
                self = this;
                ko.mapping.fromJS(data, {}, this);

            self.skip = ko.observable(0);
            self.id = ko.observable(@Model.AccountId);

            this.load20More = function () {

                self.skip(self.skip() + 20);
                $.ajax({
                    url: "/Account/GetFrom?startPos=" + self.skip() + "&accountId=" + self.id(), success: function (result) {
                        //result
                        for (var i = 0; i < result.length; i++) {
                            self.transactions.push(result[i]);
                        }
                    }
                });
                }
            }

            var model = @Html.Raw(Json.Serialize(Model));
            //var viewModel = ko.mapping.fromJS(model,mapping);
            var viewModel = new transactionViewModel(model);
            ko.applyBindings(viewModel);
    </script>
}
