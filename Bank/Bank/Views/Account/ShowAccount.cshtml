@model ShowAccountDetailsViewModel

<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.5.1/knockout-latest.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout.mapping/2.4.1/knockout.mapping.min.js"></script>

<section class="generic-banner relative">
    <div class="container">
        <div class="main-wrapper">
            <!-- Start service Area -->
            <section class="service-area pt-100" id="feature">
                <div class="container">
                    <h2 class="text-white">Account Details</h2>
                    <div class="row">
                        <div class="col">
                        </div>
                        <div class="col">
                            <div class="single-service">
                                <label>Account ID</label>
                                <p class="text-white">@Model.AccountId</p>
                            </div>
                        </div>
                        <div class="col">
                            <div class="single-service">
                                <label>Balance</label>
                                <p class="text-white">@Model.Balance</p>
                            </div>
                        </div>
                        <div class="col">
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</section>

<!-- About Generic Start -->
<div class="main-wrapper">
    <!-- Start service Area -->
    <section class="service-area pt-100" id="feature">
        <div class="container">

            <h3>Transactions</h3>

            <div class="row">

                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Date</th>
                            <th scope="col">Type</th>
                            <th scope="col">Operation</th>
                            <th scope="col">Amount</th>
                            <th scope="col">Balance</th>
                            <th scope="col">Notes</th>
                            <th scope="col">Bank</th>
                            <th scope="col">Account</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data binding nedan?? -->
                        @for (int i = 0; i < Model.NumberVisibleTransactions; i++)
                        {
                        <tr>
                            <th scope="row">@Model.Transactions[i].TransactionId</th>
                            <td>@Model.Transactions[i].Date.ToShortDateString()</td>
                            <td>@Model.Transactions[i].Type</td>
                            <td>@Model.Transactions[i].Operation</td>
                            <td>@Model.Transactions[i].Amount</td>
                            <td>@Model.Transactions[i].Balance kr</td>
                            <td>@Model.Transactions[i].Symbol</td>
                            <td>@Model.Transactions[i].Bank</td>
                            <td>@Model.Transactions[i].Account</td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
            <label>Number of visible transactions: @Model.NumberVisibleTransactions / @Model.Transactions.Count()</label>
            <br/>
            <div class="row justify-content-center align-items-start">
                <button class="primary-btn text-uppercase mb-10" data-bind="click: load20More">Load more</button>
            </div>
        </div>
    </section>
</div>
<!-- End service Area -->
<!-- Load More Area -->


@section scripts{
    <script>

    var accountDetailsViewModel = function(data) {
        ko.mapping.fromJS(data, {}, this);

        this.load20More = function () {
            var current = parseInt(this.Model.NumberVisibleTransactions());
            current = current + 20;
            this.NumberVisibleTransactions(current);
        }
    }

    var model = @Html.Raw(Json.Serialize(Model));
    //var viewModel = ko.mapping.fromJS(model,mapping);
    var viewModel = new accountDetailsViewModel(model);
    ko.applyBindings(viewModel);
    </script>
}
